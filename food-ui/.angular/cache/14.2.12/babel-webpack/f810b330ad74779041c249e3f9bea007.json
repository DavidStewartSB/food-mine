{"ast":null,"code":"import _asyncToGenerator from \"E:/Projetos/angular/food-project/food-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ElementRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/order.service\";\nimport * as i2 from \"src/app/services/cart.service\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/router\";\nconst _c0 = [\"paypal\"];\nexport class PaypalButtonComponent {\n  constructor(orderService, cartService, toastr, router) {\n    this.orderService = orderService;\n    this.cartService = cartService;\n    this.toastr = toastr;\n    this.router = router;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    const self = this;\n    console.log(this.order.totalPrice);\n    paypal.Buttons({\n      createOrder: (data, actions) => {\n        return actions.order.create({\n          purchase_units: [{\n            amount: {\n              currency_code: 'BRL',\n              value: self.order?.totalPrice\n            }\n          }]\n        });\n      },\n      onApprove: function () {\n        var _ref = _asyncToGenerator(function* (data, actions) {\n          const payment = yield actions.order.capture();\n          _this.order.paymentId = payment.id;\n          self.orderService.pay(_this.order).subscribe({\n            next: orderId => {\n              _this.cartService.clearCart();\n\n              _this.router.navigateByUrl('/track/' + orderId);\n\n              _this.toastr.success('Pagemento feito com sucesso!', 'Concluído');\n            },\n            error: error => {\n              _this.toastr.error('Falha ao efetuar o pagamento', 'Error');\n            }\n          });\n        });\n\n        return function onApprove(_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      onError: err => {\n        this.toastr.error('Falha ao processar pagamento', 'Error');\n        console.log(err);\n      }\n    }).render(this.paypalElement.nativeElement);\n  }\n\n}\n\nPaypalButtonComponent.ɵfac = function PaypalButtonComponent_Factory(t) {\n  return new (t || PaypalButtonComponent)(i0.ɵɵdirectiveInject(i1.OrderService), i0.ɵɵdirectiveInject(i2.CartService), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.Router));\n};\n\nPaypalButtonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PaypalButtonComponent,\n  selectors: [[\"paypal-button\"]],\n  viewQuery: function PaypalButtonComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paypalElement = _t.first);\n    }\n  },\n  inputs: {\n    order: \"order\"\n  },\n  decls: 2,\n  vars: 0,\n  consts: [[\"paypal\", \"\"]],\n  template: function PaypalButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", null, 0);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYXlwYWwtYnV0dG9uLmNvbXBvbmVudC5zY3NzIn0= */\"]\n});","map":{"version":3,"mappings":";AAAA,SAAoBA,UAApB,QAAgE,eAAhE;;;;;;;AAaA,OAAM,MAAOC,qBAAP,CAA4B;EAKhCC,YACUC,YADV,EAEUC,WAFV,EAGUC,MAHV,EAIUC,MAJV,EAIwB;IAHd;IACA;IACA;IACA;EAAmB;;EAE7BC,QAAQ;IAAA;;IACN,MAAMC,IAAI,GAAG,IAAb;IACAC,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,UAAvB;IACAC,MAAM,CACLC,OADD,CACS;MACPC,WAAW,EAAE,CAACC,IAAD,EAAYC,OAAZ,KAA4B;QACvC,OAAOA,OAAO,CAACN,KAAR,CAAcO,MAAd,CAAqB;UAC1BC,cAAc,EAAE,CACd;YACEC,MAAM,EAAE;cACNC,aAAa,EAAE,KADT;cAENC,KAAK,EAAEd,IAAI,CAACG,KAAL,EAAYC;YAFb;UADV,CADc;QADU,CAArB,CAAP;MAUD,CAZM;MAcPW,SAAS;QAAA,6BAAE,WAAOP,IAAP,EAAkBC,OAAlB,EAAkC;UAC3C,MAAMO,OAAO,SAASP,OAAO,CAACN,KAAR,CAAcc,OAAd,EAAtB;UACA,KAAI,CAACd,KAAL,CAAWe,SAAX,GAAuBF,OAAO,CAACG,EAA/B;UACAnB,IAAI,CAACL,YAAL,CAAkByB,GAAlB,CAAsB,KAAI,CAACjB,KAA3B,EAAkCkB,SAAlC,CACE;YACEC,IAAI,EAAGC,OAAD,IAAY;cAChB,KAAI,CAAC3B,WAAL,CAAiB4B,SAAjB;;cACA,KAAI,CAAC1B,MAAL,CAAY2B,aAAZ,CAA0B,YAAYF,OAAtC;;cACA,KAAI,CAAC1B,MAAL,CAAY6B,OAAZ,CACE,8BADF,EAEE,WAFF;YAID,CARH;YASEC,KAAK,EAAGA,KAAD,IAAU;cACf,KAAI,CAAC9B,MAAL,CAAY8B,KAAZ,CAAkB,8BAAlB,EAAkD,OAAlD;YACD;UAXH,CADF;QAeD,CAlBQ;;QAAA;UAAA;QAAA;MAAA,GAdF;MAkCPC,OAAO,EAAGC,GAAD,IAAa;QACpB,KAAKhC,MAAL,CAAY8B,KAAZ,CAAkB,8BAAlB,EAAkD,OAAlD;QACA1B,OAAO,CAACC,GAAR,CAAY2B,GAAZ;MACD;IArCM,CADT,EAwCCC,MAxCD,CAwCQ,KAAKC,aAAL,CAAmBC,aAxC3B;EA0CD;;AAxD+B;;;mBAArBvC,uBAAqBwC;AAAA;;;QAArBxC;EAAqByC;EAAAC;IAAA;;;;;;;;;;;;;;;;;;MCblCF","names":["ElementRef","PaypalButtonComponent","constructor","orderService","cartService","toastr","router","ngOnInit","self","console","log","order","totalPrice","paypal","Buttons","createOrder","data","actions","create","purchase_units","amount","currency_code","value","onApprove","payment","capture","paymentId","id","pay","subscribe","next","orderId","clearCart","navigateByUrl","success","error","onError","err","render","paypalElement","nativeElement","i0","selectors","viewQuery"],"sourceRoot":"","sources":["E:\\Projetos\\angular\\food-project\\food-ui\\src\\app\\components\\partials\\paypal-button\\paypal-button.component.ts","E:\\Projetos\\angular\\food-project\\food-ui\\src\\app\\components\\partials\\paypal-button\\paypal-button.component.html"],"sourcesContent":["import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { CartService } from 'src/app/services/cart.service';\nimport { OrderService } from 'src/app/services/order.service';\nimport { Order } from 'src/app/shared/models';\n\ndeclare var paypal: any;\n@Component({\n  selector: 'paypal-button',\n  templateUrl: './paypal-button.component.html',\n  styleUrls: ['./paypal-button.component.scss']\n})\nexport class PaypalButtonComponent implements OnInit {\n\n  @Input() order!: Order\n  @ViewChild('paypal', {static: true})\n  paypalElement!: ElementRef\n  constructor(\n    private orderService: OrderService,\n    private cartService: CartService,\n    private toastr: ToastrService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    const self = this;\n    console.log(this.order.totalPrice)\n    paypal\n    .Buttons({\n      createOrder: (data: any, actions: any) => {\n        return actions.order.create({\n          purchase_units: [\n            {\n              amount: {\n                currency_code: 'BRL',\n                value: self.order?.totalPrice,\n              },\n            },\n          ],\n        });\n      },\n\n      onApprove: async (data: any, actions: any) => {\n        const payment = await actions.order.capture();\n        this.order.paymentId = payment.id;\n        self.orderService.pay(this.order).subscribe(\n          {\n            next: (orderId) => {\n              this.cartService.clearCart();\n              this.router.navigateByUrl('/track/' + orderId);\n              this.toastr.success(\n                'Pagemento feito com sucesso!',\n                'Concluído'\n              );\n            },\n            error: (error) => {\n              this.toastr.error('Falha ao efetuar o pagamento', 'Error');\n            }\n          }\n        );\n      },\n\n      onError: (err: any) => {\n        this.toastr.error('Falha ao processar pagamento', 'Error');\n        console.log(err);\n      },\n    })\n    .render(this.paypalElement.nativeElement);\n\n  }\n\n}","<div #paypal></div>"]},"metadata":{},"sourceType":"module"}